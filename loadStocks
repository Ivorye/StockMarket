import pymysql, pandas as pd, tushare as ts

#返回cursor
def connectDB():
	db=pymysql.connect(host='localhost',
		user='root',
		password='atos1234',
		database='stockshare')
	cursor = db.cursor()

#每天只能调用5次接口
def getStockBasic():
	pro = ts.pro_api("4d47c02a8bb025881c9dd9e3c36d25139ab5b429a73353e566fc02a9")
	data = pro.stock_basic(exchange='', list_status='L', fields='ts_code,symbol,fullname,area,industry,list_date')
	df=pd.DataFrame(data)
	l=len(df)

#创建表
def createTable(df=' '):
	l=len(df)
	cursor=connectDB()
	for i in range (0,l):
		s="gp%s"%df.loc[i].symbol
		sql="""CREATE TABLE `stockshare`.`%s` (  `trade_date` VARCHAR(8) NOT NULL,`open` FLOAT NOT NULL,`high` FLOAT NOT NULL,\
		`low` FLOAT NOT NULL,`close` FLOAT NOT NULL,`preclose` FLOAT NOT NULL,`change` FLOAT NOT NULL,`pct_chg` FLOAT NOT NULL,\
		`vol` FLOAT NOT NULL,`amount` FLOAT NOT NULL,PRIMARY KEY (`trade_date`),UNIQUE INDEX `trade_date_UNIQUE` (`trade_date` ASC) VISIBLE);""" %(s)
		try:
			cursor.execute(sql)
			x = i%50
			if x == 0:
				print(i, " tables have been created")
			if i==l-1:
				print(i, " All tables have been created")
		except:
			print("exception throw")


#将所有股票基本信息载入总+表
def loadAllBasic(df=' '):
	l=len(df)
	cursor=connectDB()
	for i in range (0,l):
		sql="insert into stocks(id,symbol,st_code,fullname,list_date) values('%s','%s','%s','%s','%s')" %(i+1,df.loc[i].symbol,df.loc[i].ts_code,df.loc[i].fullname,df.loc[i].list_date)
		try:
			cursor.execute(sql)
			x = i%50
			if x == 0:
				db.commit()
				print(i, " records have been loaded to database")
			if i==l-1:
				db.commit()
				print(i, "All records have been loaded to database")
		except:
			print("exception throw")
			db.rollback()


#pro = ts.pro_api("4d47c02a8bb025881c9dd9e3c36d25139ab5b429a73353e566fc02a9")
#b
for k in range(0,l):
	data=pro.daily(ts_code=df.loc[k].ts_code,start_date='20230104',end_date='20240308')
	s="gp%s"%df.loc[k].symbol
def insertHistoryForSingleStock(table=''):
	for i in range(0,len(data)):
		sql="insert into %s(trade_date,openp,high,low,closep,preclose,changes,pct_chg,vol,amount) values('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')" %(table,data.loc[i].trade_date,data.loc[i].open,data.loc[i].high,data.loc[i].low,data.loc[i].close,data.loc[i].pre_close,data.loc[i].change,data.loc[i].pct_chg,data.loc[i].vol,data.loc[i].amount)
		try:
			cursor.execute(sql)
			x = i%50
			if x == 0:
				db.commit()
				print(i, " records have been loaded to database")
			if i==l-1:
				db.commit()
				print(i, "All records have been loaded to database")
		except:
			print("exception throw")
			db.rollback()


#获取阶段涨幅大于
def getJDZF():
	for i in range(0,l):
	ss=df.loc[i].symbol
	s="gp%s"%ss
	sql="select closep from %s where trade_date = '20231201';" %s
	sql2="select closep from %s where trade_date = '20240308';" %s
	try:
		cursor.execute(sql)
		p1 = cursor.fetchall()
		cursor.execute(sql2)
		p2 = cursor.fetchall()
		p3 = p1[0][0]
		p4 = p2[0][0]
		if p4>p3*1.26:
			lst.append(ss)
		x = i%50
		if x == 0:
			db.commit()
			print(i, " records processed")
		if i==l-1:
			db.commit()
			print(i, "All records processed")
	except:
		print("exception throw")
		db.rollback()
